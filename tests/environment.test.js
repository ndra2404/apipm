describe('env', () => {
  it('Should have environment field', () => {
    expect(process.env.PORT).toBeDefined()
    expect(process.env.NODE_ENV).toBeDefined()
    expect(process.env.PREFIX).toBeDefined()
    expect(process.env.SECRET_KEY).toBeDefined()
    expect(process.env.DB_CLIENT).toBeDefined()
    expect(process.env.DB_HOST).toBeDefined()
    expect(process.env.DB_HOST).toBeDefined()
    expect(process.env.DB_HOST).toBeDefined()
    expect(process.env.DB_HOST).toBeDefined()
    expect(process.env.DB_HOST).toBeDefined()
    expect(process.env.DB_HOST).toBeDefined()
    expect(process.env.FTP_HOST).toBeDefined()
    expect(process.env.FTP_USER).toBeDefined()
    expect(process.env.FTP_PASS).toBeDefined()
    expect(process.env.HCMS_URL).toBeDefined()
    expect(process.env.HCMS_EMAIL_NOTIFICATION).toBeDefined()
    expect(process.env.EMAIL_PROVIDER).toBeDefined()
    expect(process.env.EMAIL_GMAIL_USER).toBeDefined()
    expect(process.env.EMAIL_GMAIL_PASS).toBeDefined()
    expect(process.env.EMAIL_TMT_SMTP).toBeDefined()
    expect(process.env.EMAIL_TMT_PORT).toBeDefined()
    expect(process.env.EMAIL_TMT_USER).toBeDefined()
    expect(process.env.EMAIL_TESTING).toBeDefined()
    expect(process.env.LDAP_URL).toBeDefined()
    expect(process.env.LDAP_DN).toBeDefined()
    expect(process.env.LDAP_USER).toBeDefined()
    expect(process.env.LDAP_PASS).toBeDefined()
    expect(process.env.FIREBASE_KEY).toBeDefined()
  })
})
